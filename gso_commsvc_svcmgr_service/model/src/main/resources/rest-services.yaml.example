#   一个提供学生管理服务的Rest API定义示例                                                      #
---
swagger: '2.0'


#   服务基本信息定义,包括服务名称，版本，服务描述（包括SLA），服务Owner                         #
info:
  #服务接口版本
  version: v1
  # 定义服务名称
  title: StudentService
  description: |
    提供学生管理服务，包括录取，删除，统计学生信息
    
    ** 服务SLA：**
    
    |SLA项|定义|
    |-----|-----|
    |请求成功率| >=99.9%|
    |可用性|Tair1|
    |数据一致性|最终一致，不一致时长<1分钟|
    |吞吐量|4000tps|
    |TP50请求时延|2ms|
    |TP99.9请求时延|5ms|
  contact:
    name: l00247303
    email: lijinyong@huawei.com
  
# 服务支持的访问协议http(s), 当前CloudSOP都是https的
schemes:
  - https
# Base PATH, 完整的访问路径为 basePath + path
basePath: /rest

#                            资源及资源上绑定的标准方法定义                                     #
paths:
  # 资源URL定义, 不带PATH参数
  /studentservice/v1/students:
    # POST方法定义
    post:
      summary: 录入学生信息
      description: |
        录入学生信息
        
        curl调用示例，Json Schema参考后面Student Model的定义:
        ```
        curl -v -H "Content-Type:application/json" -X POST -d "{json}" "https://accessip:port/rest/studentservice/v1/students"
        ```
      tags:
        - StudentService    # 用于代码生成，声明方法所在类名称
      operationId: createStudent  # 用于代码生成，声明方法名称
      consumes:
        - application/json  # 定义输入的body参数格式，还支持application/xml,text/plat等
      parameters:
        - name: student # 参数名称
          in: body      # 参数类型，此外还支持header,cookie,path,query等类型
          description: 学生信息
          required: true   # 参数是否必须,必须参数要显示声明为true, 默认false
          schema:
            $ref: '#/definitions/Student'
      responses:
        '200':
          description: 学生学号
          schema:
            type: string
    # GET方法定义
    get:
      summary: 查询学生信息
      description: |
        统计学生信息
        
        curl调用示例:
        ```
        curl -i -H "Accept: application/json" -X GET "https://accessip:port/rest/studentservice/v1/students?sex=male"
        ```
      tags:
        - StudentService
      operationId: getStudent
      produces:
        - application/json  # 声明返回Json格式数据
      parameters:
        - name: sex
          in: query  # 查询参数采用'query'描述
          description: |
            参数可选值：
            * male ： 查询男学生
            * female：统计女生为
          required: false  # 描述参数是否必须，缺省false
          type: string
        - name: name
          in: query  # 查询参数采用'query'描述
          description: 学生姓名作为查询条件
          required: false  # 描述参数是否必须，缺省false
          type: string
      responses:
        '200':
          description: 学生信息查询结果
          schema: # 声明返回值Schema
            type: array
            items:
              $ref: '#/definitions/Student'
  # 资源URL定义, 不带PATH参数
  /studentservice/v1/students/sum:  
    # GET方法定义
    get:
      summary: 统计学生信息
      description: |
        统计学生信息
        
        curl调用示例:
        ```
        curl -i -H "Accept: application/json" -X GET "https://accessip:port/rest/studentservice/v1/students?sex=male"
        ```
      tags:
        - StudentService
      operationId: sumStudent
      produces:
        - application/json  # 声明返回Json格式数据
      parameters:
        - name: sex
          in: query  # 查询参数采用'query'描述
          description: |
            参数可选值：
            * male ： 统计学生为男性的人数
            * female：统计学生为女性的人数
            * 如果不存在或为其他值，返回学生总人数
          required: true  # 描述参数是否必须
          type: string
      responses:
        '200':
          description: 统计学生信息
          schema: # 声明返回值Schema
            $ref: '#/definitions/StudentCount'
  
  # 资源URL定义，带PATH参数
  /studentservice/v1/students/{id}:
    # PATH参数定义, 公共的PATH参数可以提取到方法定义前面
    parameters:
      - name: id
        in: path 
        description: 学生记录学号
        required: true
        type: string
    # PUT方法定义
    put:
      summary: 修改学生信息
      description: |
        修改指定ID的学生信息
        
        curl调用示例，Json Schema参考后面Student Mode定义:
        ```
        curl -v -H "Content-Type:application/json" -X PUT -d "{json}" -X PUT "https://accessip:port/rest/studentservice/v1/students/00247303"
        ```
      tags:
        - StudentService
      operationId: modifyStudent
      consumes:
        - application/json
      responses:
        '200':
          description: |
            * ”true” - 修改成功
            * “false” - 修改失败
          schema:
            type: string  # 直接返回简单String类型数据
        # 其他返回码的定义
        '400':
          description: Invalid ID supplied
        '404':
          description: Student not found
        '405':
          description: Validation exception
    # DELETE方法定义
    delete:
      summary: 删除学生信息
      description: |
        删除指定ID的学生信息
        
        curl调用示例:
        ```
        curl -v -X DELETE "https://accessip:port/rest/studentservice/v1/students/00247303"
        ```
      tags:
        - StudentService
      operationId: deleteStudent
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: 学生记录学号
          required: true
          type: string
      responses:
        '200':
          description: |
            * ”true” - 删除成功
            * “false” - 删除失败，删除不存在或者已经被删除的记录，都返回false
          schema:
            type: string  # 直接返回简单String类型数据

#                            自定义的复杂数据结构,可选                                          #
definitions:
  Student:
    description: 学生信息
    properties:
      # 长整型定义
      id:
        description: 登录标识ID
        type: integer
        format: int64
      # 字符串类型数据定义，要求最小3个字符，最长32个字符
      name:
        description: 名称
        type: string
        minLength: 3
        maxLength: 32
      # 枚举类定义，设置了枚举值
      sex:
        description: 性别
        type: string
        enum:
         - male
         - female
      # 字符串类型定义
      grade:
        description: 年级
        type: string
      # 整型类型数据定义, 并设置取值范围
      age:
        description: 年龄, 取值范围最小3岁，最大60岁
        type: integer
        format: int32
        minimum: 3
        maximum: 60
      # 简单列表（数组）定义
      friends:
        description: 朋友圈（好朋友列表）
        type: array
        items:
          type: string
      # 简单String to String Mapping定义
      contacts:
        description: 通讯录, 存放好友电话号码, 一个姓名到电话号码的映射
        type: object
        additionalProperties:
          type: string
      # 复杂列表（数组）定义
      friends_detail:
        description: 朋友圈（好朋友列表）
        type: array
        items:
          $ref: '#/definitions/Friend'
      # 复杂String to Model Object Mapping定义
      contacts_detail:
        description: 通讯录, 存放好友电话号码, 一个姓名到电话号码的映射
        type: object
        additionalProperties:
          $ref: '#/definitions/Contact'
  Friend:
    description: 朋友圈数据结构定义
    properties:
      name:
        description: 朋友名称
        type: string
      alias:
        description: 标示名称
        type: string
  Contact:
    description: 通讯录数据结构定义
    properties:
      name:
        description: 朋友名称
        type: string
      mobile:
        description: 手机号码
        type: string
      email:
        description: Email Address
        type: string
        format: email
  StudentCount:
    description: 学生统计结果定义
    properties:
      sex:
        description: 性别
        type: string
        enum:
         - male
         - female
      total:
        type: integer
        format: int64
        description: 当前人数